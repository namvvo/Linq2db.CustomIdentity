//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;
using Microsoft.AspNetCore.Identity;

namespace BlazorIdWithLinq2dbModels
{
    /// <summary>
    /// Database       : netAuth
    /// Data Source    : home\sqlexpress
    /// Server Version : 16.00.1110
    /// </summary>
    public partial class TestDataDB : LinqToDB.Data.DataConnection
    {
        public ITable<AspNetRole> AspNetRoles { get { return this.GetTable<AspNetRole>(); } }
        public ITable<AspNetRoleClaim> AspNetRoleClaims { get { return this.GetTable<AspNetRoleClaim>(); } }
        public ITable<AspNetUser> AspNetUsers { get { return this.GetTable<AspNetUser>(); } }
        public ITable<AspNetUserClaim> AspNetUserClaims { get { return this.GetTable<AspNetUserClaim>(); } }
        public ITable<AspNetUserLogin> AspNetUserLogins { get { return this.GetTable<AspNetUserLogin>(); } }
        public ITable<AspNetUserRole> AspNetUserRoles { get { return this.GetTable<AspNetUserRole>(); } }
        public ITable<AspNetUserToken> AspNetUserTokens { get { return this.GetTable<AspNetUserToken>(); } }
        public ITable<EFMigrationsHistory> EFMigrationsHistories { get { return this.GetTable<EFMigrationsHistory>(); } }

        public TestDataDB()
        {
            InitDataContext();
            InitMappingSchema();
        }

        public TestDataDB(string configuration)
            : base(configuration)
        {
            InitDataContext();
            InitMappingSchema();
        }

        public TestDataDB(DataOptions options)
            : base(options)
        {
            InitDataContext();
            InitMappingSchema();
        }

        public TestDataDB(DataOptions<TestDataDB> options)
            : base(options.Options)
        {
            InitDataContext();
            InitMappingSchema();
        }

        partial void InitDataContext();
        partial void InitMappingSchema();
    }

    [Table(Schema = "dbo", Name = "AspNetRoles")]
    public partial class AspNetRole: IdentityRole
    {
        [PrimaryKey, NotNull] public override string Id { get; set; } // nvarchar(450)
        [Column, Nullable] public override string Name { get; set; } // nvarchar(256)
        [Column, Nullable] public override string NormalizedName { get; set; } // nvarchar(256)
        [Column, Nullable] public override string ConcurrencyStamp { get; set; } // nvarchar(max)

        #region Associations

        /// <summary>
        /// FK_AspNetRoleClaims_AspNetRoles_RoleId_BackReference (dbo.AspNetRoleClaims)
        /// </summary>
        [Association(ThisKey = "Id", OtherKey = "RoleId", CanBeNull = true)]
        public IEnumerable<AspNetRoleClaim> AspNetRoleClaimsRoleIds { get; set; }

        /// <summary>
        /// FK_AspNetUserRoles_AspNetRoles_RoleId_BackReference (dbo.AspNetUserRoles)
        /// </summary>
        [Association(ThisKey = "Id", OtherKey = "RoleId", CanBeNull = true)]
        public IEnumerable<AspNetUserRole> AspNetUserRolesRoleIds { get; set; }

        #endregion
    }

    [Table(Schema = "dbo", Name = "AspNetRoleClaims")]
    public partial class AspNetRoleClaim
    {
        [PrimaryKey, Identity] public int Id { get; set; } // int
        [Column, NotNull] public string RoleId { get; set; } // nvarchar(450)
        [Column, Nullable] public string ClaimType { get; set; } // nvarchar(max)
        [Column, Nullable] public string ClaimValue { get; set; } // nvarchar(max)

        #region Associations

        /// <summary>
        /// FK_AspNetRoleClaims_AspNetRoles_RoleId (dbo.AspNetRoles)
        /// </summary>
        [Association(ThisKey = "RoleId", OtherKey = "Id", CanBeNull = false)]
        public AspNetRole Role { get; set; }

        #endregion
    }

    [Table(Schema = "dbo", Name = "AspNetUsers")]
    public partial class AspNetUser : IdentityUser
    {
        [PrimaryKey, NotNull] public override string Id { get; set; } // nvarchar(450)
        [Column, Nullable] public override string UserName { get; set; } // nvarchar(256)
        [Column, Nullable] public override string NormalizedUserName { get; set; } // nvarchar(256)
        [Column, Nullable] public override string Email { get; set; } // nvarchar(256)
        [Column, Nullable] public override string NormalizedEmail { get; set; } // nvarchar(256)
        [Column, NotNull] public override bool EmailConfirmed { get; set; } // bit
        [Column, Nullable] public override string PasswordHash { get; set; } // nvarchar(max)
        [Column, Nullable] public override string SecurityStamp { get; set; } // nvarchar(max)
        [Column, Nullable] public override string ConcurrencyStamp { get; set; } // nvarchar(max)
        [Column, Nullable] public override string PhoneNumber { get; set; } // nvarchar(max)
        [Column, NotNull] public override bool PhoneNumberConfirmed { get; set; } // bit
        [Column, NotNull] public override bool TwoFactorEnabled { get; set; } // bit
        [Column, Nullable] public override DateTimeOffset? LockoutEnd { get; set; } // datetimeoffset(7)
        [Column, NotNull] public override bool LockoutEnabled { get; set; } // bit
        [Column, NotNull] public override int AccessFailedCount { get; set; } // int
        [Column, NotNull] public int Gender { get; set; } // int

        #region Associations

        /// <summary>
        /// FK_AspNetUserClaims_AspNetUsers_UserId_BackReference (dbo.AspNetUserClaims)
        /// </summary>
        [Association(ThisKey = "Id", OtherKey = "UserId", CanBeNull = true)]
        public IEnumerable<AspNetUserClaim> AspNetUserClaimsUserIds { get; set; }

        /// <summary>
        /// FK_AspNetUserLogins_AspNetUsers_UserId_BackReference (dbo.AspNetUserLogins)
        /// </summary>
        [Association(ThisKey = "Id", OtherKey = "UserId", CanBeNull = true)]
        public IEnumerable<AspNetUserLogin> AspNetUserLoginsUserIds { get; set; }

        /// <summary>
        /// FK_AspNetUserRoles_AspNetUsers_UserId_BackReference (dbo.AspNetUserRoles)
        /// </summary>
        [Association(ThisKey = "Id", OtherKey = "UserId", CanBeNull = true)]
        public IEnumerable<AspNetUserRole> AspNetUserRolesUserIds { get; set; }

        /// <summary>
        /// FK_AspNetUserTokens_AspNetUsers_UserId_BackReference (dbo.AspNetUserTokens)
        /// </summary>
        [Association(ThisKey = "Id", OtherKey = "UserId", CanBeNull = true)]
        public IEnumerable<AspNetUserToken> AspNetUserTokensUserIds { get; set; }

        #endregion
    }

    [Table(Schema = "dbo", Name = "AspNetUserClaims")]
    public partial class AspNetUserClaim
    {
        [PrimaryKey, Identity] public int Id { get; set; } // int
        [Column, NotNull] public string UserId { get; set; } // nvarchar(450)
        [Column, Nullable] public string ClaimType { get; set; } // nvarchar(max)
        [Column, Nullable] public string ClaimValue { get; set; } // nvarchar(max)

        #region Associations

        /// <summary>
        /// FK_AspNetUserClaims_AspNetUsers_UserId (dbo.AspNetUsers)
        /// </summary>
        [Association(ThisKey = "UserId", OtherKey = "Id", CanBeNull = false)]
        public AspNetUser User { get; set; }

        #endregion
    }

    [Table(Schema = "dbo", Name = "AspNetUserLogins")]
    public partial class AspNetUserLogin
    {
        [PrimaryKey(1), NotNull] public string LoginProvider { get; set; } // nvarchar(450)
        [PrimaryKey(2), NotNull] public string ProviderKey { get; set; } // nvarchar(450)
        [Column, Nullable] public string ProviderDisplayName { get; set; } // nvarchar(max)
        [Column, NotNull] public string UserId { get; set; } // nvarchar(450)

        #region Associations

        /// <summary>
        /// FK_AspNetUserLogins_AspNetUsers_UserId (dbo.AspNetUsers)
        /// </summary>
        [Association(ThisKey = "UserId", OtherKey = "Id", CanBeNull = false)]
        public AspNetUser User { get; set; }

        #endregion
    }

    [Table(Schema = "dbo", Name = "AspNetUserRoles")]
    public partial class AspNetUserRole: IdentityUserRole<string>
    {
        [PrimaryKey(1), NotNull] public string UserId { get; set; } // nvarchar(450)
        [PrimaryKey(2), NotNull] public string RoleId { get; set; } // nvarchar(450)

        #region Associations

        /// <summary>
        /// FK_AspNetUserRoles_AspNetRoles_RoleId (dbo.AspNetRoles)
        /// </summary>
        [Association(ThisKey = "RoleId", OtherKey = "Id", CanBeNull = false)]
        public AspNetRole Role { get; set; }

        /// <summary>
        /// FK_AspNetUserRoles_AspNetUsers_UserId (dbo.AspNetUsers)
        /// </summary>
        [Association(ThisKey = "UserId", OtherKey = "Id", CanBeNull = false)]
        public AspNetUser User { get; set; }

        #endregion
    }

    [Table(Schema = "dbo", Name = "AspNetUserTokens")]
    public partial class AspNetUserToken
    {
        [PrimaryKey(1), NotNull] public string UserId { get; set; } // nvarchar(450)
        [PrimaryKey(2), NotNull] public string LoginProvider { get; set; } // nvarchar(450)
        [PrimaryKey(3), NotNull] public string Name { get; set; } // nvarchar(450)
        [Column, Nullable] public string Value { get; set; } // nvarchar(max)

        #region Associations

        /// <summary>
        /// FK_AspNetUserTokens_AspNetUsers_UserId (dbo.AspNetUsers)
        /// </summary>
        [Association(ThisKey = "UserId", OtherKey = "Id", CanBeNull = false)]
        public AspNetUser User { get; set; }

        #endregion
    }

    [Table(Schema = "dbo", Name = "__EFMigrationsHistory")]
    public partial class EFMigrationsHistory
    {
        [PrimaryKey, NotNull] public string MigrationId { get; set; } // nvarchar(150)
        [Column, NotNull] public string ProductVersion { get; set; } // nvarchar(32)
    }

    public static partial class TableExtensions
    {
        public static AspNetRole Find(this ITable<AspNetRole> table, string Id)
        {
            return table.FirstOrDefault(t =>
                t.Id == Id);
        }

        public static AspNetRoleClaim Find(this ITable<AspNetRoleClaim> table, int Id)
        {
            return table.FirstOrDefault(t =>
                t.Id == Id);
        }

        public static AspNetUser Find(this ITable<AspNetUser> table, string Id)
        {
            return table.FirstOrDefault(t =>
                t.Id == Id);
        }

        public static AspNetUserClaim Find(this ITable<AspNetUserClaim> table, int Id)
        {
            return table.FirstOrDefault(t =>
                t.Id == Id);
        }

        public static AspNetUserLogin Find(this ITable<AspNetUserLogin> table, string LoginProvider, string ProviderKey)
        {
            return table.FirstOrDefault(t =>
                t.LoginProvider == LoginProvider &&
                t.ProviderKey == ProviderKey);
        }

        public static AspNetUserRole Find(this ITable<AspNetUserRole> table, string UserId, string RoleId)
        {
            return table.FirstOrDefault(t =>
                t.UserId == UserId &&
                t.RoleId == RoleId);
        }

        public static AspNetUserToken Find(this ITable<AspNetUserToken> table, string UserId, string LoginProvider, string Name)
        {
            return table.FirstOrDefault(t =>
                t.UserId == UserId &&
                t.LoginProvider == LoginProvider &&
                t.Name == Name);
        }

        public static EFMigrationsHistory Find(this ITable<EFMigrationsHistory> table, string MigrationId)
        {
            return table.FirstOrDefault(t =>
                t.MigrationId == MigrationId);
        }
    }
}
